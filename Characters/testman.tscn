[gd_scene load_steps=11 format=3 uid="uid://l7qf85gbbdpf"]

[ext_resource type="Texture2D" uid="uid://c8wkn1pq25qx6" path="res://Art/Testman Platformer Pack/testman/testman-Sheet.png" id="2_d5i26"]

[sub_resource type="GDScript" id="GDScript_fccaw"]
script/source = "extends CharacterBody2D

@export var move_speed : float = 100
@export var jump_velocity : float = -400
@export var starting_direction : Vector2 = Vector2(0, 1)
@export var max_velocity : Vector2 = Vector2(500, 500)
@export var time_to_run : float = 2
@export var run_multiplier : float = 2
@export var wall_jump_horizontal: float = 200

var _duration_pressed = 0
var _is_running = false
var _is_jumping = false
var _is_falling = false

@onready var animation_player = $AnimationPlayer
@onready var sprite = $Sprite2D

# Get the gravity from the project settings to be synced with RigidDynamicBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/2d/default_gravity\")

func _physics_process(delta):
		
	# Frame init
	_is_running = false
		
	# Handle flips, button duration, and is running
	if Input.is_action_pressed(\"left\"):
		
		# If we were facing right and now we are pushing left
		if sprite.flip_h == false:
			_duration_pressed = 0
		elif _duration_pressed > time_to_run:
			_is_running = true
			
		sprite.flip_h = true
		_duration_pressed += delta	
		
	if Input.is_action_pressed(\"right\"):
		
		# If we were facing left and now we are pushing right
		if sprite.flip_h == true:
			_duration_pressed = 0
		elif _duration_pressed > time_to_run:
			_is_running = true
			
		sprite.flip_h = false
		_duration_pressed += delta	
	
	var is_on_floor = is_on_floor()
	var is_on_ceiling = is_on_ceiling()
	var is_on_wall = is_on_wall()
	
	# Handle Floor
	if is_on_floor:
		_is_jumping = false
		_is_falling = false
	
	# Handle Jump.
	var is_jump_pressed = Input.is_action_just_pressed(\"jump\");
	if is_jump_pressed and is_on_floor:
		velocity.y = jump_velocity
		_is_jumping = true
		_is_falling = false
	
	# Get the input direction and handle the movement/deceleration.
	var direction = Input.get_axis(\"left\", \"right\")
	if direction:
		if _is_running:
			velocity.x = direction * move_speed * run_multiplier
		else:
			velocity.x = direction * move_speed
	else:
		velocity.x = move_toward(velocity.x, 0, move_speed)
		
	# Handle Ceiling, Walls and the gravity.
	if is_on_ceiling:
		velocity.y = gravity * delta
	elif is_on_wall:
		velocity.y = 0
		if is_jump_pressed:
			if sprite.flip_h:
				velocity.x = wall_jump_horizontal
			else:
				velocity.x = -wall_jump_horizontal
			velocity.y = jump_velocity
	elif not is_on_floor:
		velocity.y += gravity * delta
			
	# Clamp final velocities
	velocity.x = clamp(velocity.x, -max_velocity.x, max_velocity.x)
	velocity.y = clamp(velocity.y, -max_velocity.y, max_velocity.y)
		
	move_and_slide()
		
	var velocity_direction = velocity.normalized()		
		
	# Handle what state to use for animations
	if _is_jumping:
		_play_animation(\"Jump\")
	elif velocity_direction.y == 1:
		_is_falling = true
		_is_running = false
		_is_jumping = false
		_duration_pressed = 0
		_play_animation(\"Fall\")
	elif (velocity.x != 0):
		if _is_running:
			_play_animation(\"Run\")
		else:
			_play_animation(\"Walk\")
	else:
		_is_falling = false
		_is_jumping = false
		_is_running = false
		_duration_pressed = 0
		_play_animation(\"Idle\")
	
	
func _play_animation(name):
	if name != animation_player.current_animation:
		animation_player.play(name)
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_ufpm7"]
size = Vector2(5, 8)

[sub_resource type="Animation" id="Animation_ifk8u"]
resource_name = "Fall"
length = 0.2
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame_coords")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.5),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [Vector2i(0, 6), Vector2i(1, 6)]
}

[sub_resource type="Animation" id="Animation_8j7fk"]
resource_name = "Idle"
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame_coords")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.5),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [Vector2i(0, 0), Vector2i(1, 0)]
}

[sub_resource type="Animation" id="Animation_fwbgv"]
resource_name = "Jump"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame_coords")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.3, 0.6, 0.9),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [Vector2i(0, 3), Vector2i(1, 3), Vector2i(2, 3), Vector2i(3, 3)]
}

[sub_resource type="Animation" id="Animation_5goap"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame_coords")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2i(0, 0)]
}

[sub_resource type="Animation" id="Animation_olp2h"]
resource_name = "Run"
length = 0.6
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame_coords")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3, 0.4, 0.5),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 1,
"values": [Vector2i(0, 2), Vector2i(1, 2), Vector2i(2, 2), Vector2i(3, 2), Vector2i(4, 2), Vector2i(5, 2)]
}

[sub_resource type="Animation" id="Animation_8n86v"]
resource_name = "Walk"
length = 0.6
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame_coords")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3, 0.4, 0.5),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 1,
"values": [Vector2i(0, 1), Vector2i(1, 1), Vector2i(2, 1), Vector2i(3, 1), Vector2i(4, 1), Vector2i(1, 1)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_yub0u"]
_data = {
"Fall": SubResource("Animation_ifk8u"),
"Idle": SubResource("Animation_8j7fk"),
"Jump": SubResource("Animation_fwbgv"),
"RESET": SubResource("Animation_5goap"),
"Run": SubResource("Animation_olp2h"),
"Walk": SubResource("Animation_8n86v")
}

[node name="testman" type="CharacterBody2D"]
script = SubResource("GDScript_fccaw")
move_speed = 25.0

[node name="Sprite2D" type="Sprite2D" parent="."]
texture = ExtResource("2_d5i26")
hframes = 6
vframes = 32

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(-0.5, 4)
shape = SubResource("RectangleShape2D_ufpm7")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_yub0u")
}
